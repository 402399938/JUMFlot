(function(e){function r(a){var d=e(this)[0].attributes,d=s(d.docuobj.nodeValue,d.prevname.nodeValue,d.actname.nodeValue);e.plot.JUMlib.library.showTooltip(a.pageX,a.pageY,d)}function t(a){e.ajax({url:a,method:"GET",dataType:"text",success:function(a){e("#placeholderSource").html(a)},error:function(a,e,b){console.log(a,e,b)}})}function p(a,d,g){d||(d=8);var b="";g?b+="<ul>\n":(g=0,b+='<ul id="sitemap" class="treeview">\n');if("object"===typeof a)for(var c in a)"object"===typeof a[c]?(b=e.isNumeric(c)?
b+("<b>["+c+"]</b>"):b+("<li><b>"+c+"</b>"),a[c].docu&&(b+="&nbsp;<dfn>"+a[c].docu+"</dfn>"),a[c].defVal&&"none"!==a[c].defVal&&(b+="&nbsp;(<code>"+a[c].defVal+"</code>)"),b+="</li>\n",d>g&&(b+=p(a[c],d,g+1))):"docu"!==c&&"defVal"!==c&&(b+="<li>"+a[c]+"</li>\n");return b+"</ul>\n"}function u(a,d,g,b){function c(a,e,d){var j="";0>e?(e=0,j+='<ul id="sitemap" class="treeview">\n'):j+="<ul>\n";if("object"===typeof a)for(var k in a)if("object"===typeof a[k])j+="<li><b>"+f(d,k)+"</b>&nbsp;<i>"+h(a[k])+
"</i></li>\n",g>e&&(j+=c(a[k],e+1,d+"."+k));else if("function"===typeof a[k])j=!0===b?j+("<li>"+f(d,k)+"&nbsp;"+a[k].toString()+"</li>\n"):j+("<li>"+f(d,k)+"&nbsp;<i>"+h(a[k])+"</i></li>\n");else{var y="<li>"+f(d,k)+"=",m=a[k];"string"===typeof m&&(m=m.replace(/</g,"&lt;"),m=m.replace(/>/g,"&gt;"));j+=y+m+"&nbsp;<i>"+h(a[k])+"</i></li>\n"}else j+="<li>"+a+"&nbsp;<i>"+h(a)+"</i></li>\n";return j+"</ul>\n"}function f(a,b){return'<span class="jumflothelp" docuobj="'+d+'" prevname="'+a+'" actname="'+
b+'">'+b+"</span>"}function h(a){var b;b=typeof a;e.isArray(a)&&(b+=" Array");return b}g||(g=6);b||(b=!1);return c(a,-1,"")}function v(a){a=JSON.stringify(a);a=a.replace(/{/g,'{<blockquote style="padding:1px; margin-top:1px; margin-bottom:1px">');a=a.replace(/}/g,"</blockquote>}");a=a.replace(/\[/g,'[<blockquote style="padding:1px; margin-top:1px; margin-bottom:1px">');return a=a.replace(/\]/g,"</blockquote>]")}function s(a,e,g){var b="";a="$.plot.JUMExample.docu."+a+e+"."+g;try{eval(a+".docu")&&
(b=eval(a+".docu")),eval(a+".Default")&&(b+="Default:"+eval(a+".Default"))}catch(c){b+="nothing found, please see flot API"}return a+"<hr>"+b}var w=null,x=null,q=null;e.plot.JUMExample={};e.plot.JUMExample.init=function(a,d,g){var b="",c;for(c=0;c<d.length;c++)b+="<h3>"+d[c].header+"</h3>",b+=v(d[c].data);e("#placeholderData").html(b);b="";for(c=0;c<g.length;c++)b+="<h3>"+g[c].header+"</h3>",b+=u(g[c].data,a+"."+a+".options");e("#placeholderOption").html(b);!1===debugOn&&e(".flot_debug").hide();e("#tabs").tabs();
try{t("../../Experimental/jquery.Flot."+a+".js")}catch(f){console.log(f)}e("#placeholderManual").html(p(e.plot.JUMExample.docu[a]));e(".jumflothelp").on("mouseover",r);e(".jumflothelp").on("mouseleave",function(){e("#FLOTtooltip").remove()})};e.plot.JUMExample.showDocuHelp=r;e.plot.JUMExample.getDocu=function(a,d,g){a=a.getOptions();d=(a.series[d]||a.grid[d]||a[d]).debug.createDocuTemplate();w=d.data;x=d.form;q=g;e(q).html(x)};e.plot.JUMExample.setDocu=function(a,e){var g="actDocu.data",b;b=a.split(".");
g="actDocu.data";e=e.replace(/\r\n|\r|\n/g,"<br>");for(var c=0;c<b.length;c++)0<b[c].length&&(g+='["'+b[c]+'"]');eval(g+("='"+e+"'"))};e.plot.JUMExample.createJSON=function(){var a=JSON.stringify(w),a=a.replace(/{/g,"{\n"),a=a.replace(/}/g,"}\n");e(q).html('<textarea rows="12" cols="80">'+a+"</textarea>")};e.plot.JUMExample.showSource=t;e.plot.JUMExample.docuObjectToTemplate=function(a,d){function g(a,b){var c="";if("object"===typeof a){var c='{"docu":""',d;for(d in a)if("object"===typeof a[d])"image"!==
d?(c=e.isNumeric(d)?c+('\n,"'+d+'":'):c+("\n,"+d+":"),c+=g(a[d],b),c+="}"):c+="\n,"+d+':{"docu":""}';else if("function"===typeof a[d])var f=a[d].toSource(),f=f.substr(8,f.indexOf(")")-7),c=!0===b?c+('\n,"'+d+'":{"docu":""}'):c+('\n,"'+d+'":{"docu":"",defVal:"'+f+'"}');else c=!0===b?c+('\n,"'+d+'":{"docu":"","defVal":"'+a[d]+'"}'):c+('\n,"'+d+'":{"docu":""}')}else c+='{"docu":""';return c}var b,c,f,h;b='z = {"docu":""\n'+(","+d+':{"docu":""\n');c=eval(b+"\n}\n}");for(var l=0;l<a.length;l++){f=b;var n=
a[l].name.split(".");f+=",";for(h=0;h<n.length-1;h++)f+=n[h]+':{"docu":"",';f+=n[n.length-1]+":";h=a[l].takeDefault?a[l].takeDefault:!1;f+=g(a[l].tree,h)+"}";for(h=0;h<n.length-1;h++)f+="}";f+="\n}\n}";e.extend(!0,c,eval(f))}return c};e.plot.JUMExample.extendDocuObject=function(a,d){function g(a,b){for(var c in a)"object"===typeof a[c]?b[c]&&g(a[c],b[c]):"docu"===c?b.docu&&0<b.docu.length&&(a.docu=b.docu):"defVal"===c&&(b.defVal&&0<b.defVal.length)&&(a.defVal=b.defVal)}var b=e.plot.JUMExample.docu[d],
c=a[d].data,f;for(f in c)"0"!==f&&("docu"!==f&&"defVal"!==f)&&delete c[f];b&&g(a,b);e.extend(!0,a,b)};e.plot.JUMExample.docuObjectToEdit=function(a,d){function e(a,d){b="<ul>";b+="<li>"+d.substr(d.lastIndexOf(".")+1);a.defVal&&(b+=" <i>default:"+a.defVal+"</i>");b+="<br>";b+='<textarea cols="50" rows="3" onblur="'+("$.plot.JUMExample.setDocu('"+d+".docu',this.value);")+'" >'+a.docu+"</textarea><br>";for(var h in a)"object"===typeof a[h]&&(b+=e(a[h],d+"."+h));return b+="</ul>"}var b='<form name="editObject">',
b=b+'<input type="button" value="Create json" onclick="$.plot.JUMExample.createJSON();">',b=b+e(a,d);return b+="</form>"};e.plot.JUMExample.docuObjectToHTML=p;e.plot.JUMExample.objectToDocumentation=u;e.plot.JUMExample.objectStringifyHTML=v;e.plot.JUMExample.getAPIHelp=s;e.plot.JUMExample.docu={}})(jQuery);$.plot.JUMExample.docu.background={docu:"Documentation",background:{docu:"<strong>Plugin to fraw background and/or overlay</strong>.<br>Background is drawn on an additional canvas context. Critical point is the use of zIndex, since some plugins change zIndex to negativ values.<br>See option zIndex how to handle this.",options:{docu:"",grid:{docu:"Standard grid object from Flot",background:{docu:"special options for background only",active:{docu:"activate the plugin",defVal:"false"},mode:{docu:"optional values are image, color and userdefined",
defVal:"color"},color:{docu:"specific options for color mode",colors:{docu:"array of colors for color gradient","0":{docu:"",defVal:"white"},1:{docu:"1st Color",defVal:"yellow"},2:{docu:"2nd Color",defVal:"orange"},3:{docu:"believe it or not, this is 3rd color ;-)",defVal:"blue"}}},image:{docu:"specific options for image mode. This is set to an image object, see example for more details"},fncDraw:{docu:"for calling userdefined backgrounds this is used for a function call. See examples with a clock running in the background"},
setZIndex:{docu:"option for setting all canvas to a specific value. Very helpful for using jQuery UI.<br>True sets background to 0, drawing area to 1 and highlight to 2<br>A number sets drawing area to the given number, background to number-- and highlight to number++ ",defVal:"false"},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",
active:{docu:"Activates the Debug function",defVal:"false"},createDocuTemplate:{docu:"if debug.active is true, this holds the function which is used to create the template for documentation"}}},overlay:{docu:"Specific options for drawing overlays. Overlay image is drawn on drawing area with given opacity.<br>This does not work for those plugins, that use hook draw",active:{docu:"Activates drawing an overlay",defVal:"false"},image:{docu:"This is set to an image object, works similiar to image in background part"},
opacity:{docu:"Opacity for drawing overlay image",defVal:"0.2"}}}}}};$.plot.JUMExample.docu.bandwidth={docu:"",defVal:"",bandwidth:{docu:"<strong>Plugin to create bandwidth charts</strong>",defVal:"none",data:{docu:"Data Array specific for Bandwidth chart",defVal:"none","0":{docu:"first data entry",defVal:"none","0":{docu:"Y-value",defVal:"none"},1:{docu:"X High-value",defVal:"none"},2:{docu:"X Low-value",defVal:"none"}},1:{docu:"more entries",defVal:"none"}},options:{docu:"options for bandwidth",defVal:"none",series:{docu:"series options for bandwidth",defVal:"none",
bandwidth:{docu:"bandwidth only options",defVal:"none",active:{docu:"activate the plugin",defVal:"false"},show:{docu:"show specific serie. this needs to be overwritten in data",defVal:"false"},fill:{docu:"Fill bandwidth bar, (false not checked yet)",defVal:"true"},lineWidth:{docu:"The linewidth of a bandwidth bar, given as number and px(see default) others formats will follow later",defVal:"4px"},highlight:{docu:"Used to highlight in case of HOVER",defVal:"none",opacity:{docu:"only Opacity is supported for Highlighting (yet)",
defVal:"0.5"}},drawBandwidth:{docu:"Function call which is used for drawing of one bar for Bandwidth. This can be replaced by user defined function. Take a closer look to source of examples to see more.",defVal:"none"},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",defVal:"none",active:{docu:"Activate the button for creating a template",
defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",defVal:"none"}}},editMode:{docu:"Default Editmode for bandwidth. See mouse plugin for more information. This value may be overdriven during editing, to support changing of X(can be changed in X-direction only), High and Low(both can be changed in Y-direction only).",defVal:"y"},editable:{docu:"copied by FLOT, source is mouse plugin",defVal:"false"},nearBy:{docu:"data used to support findItem for hover, click etc.",
defVal:"none",distance:{docu:"distance in pixel to find nearest bandwidth bar",defVal:"6"},findItem:{docu:"Function call to find item under Cursor. Is overwritten during processRawData hook. This would be the place to add your own find function, which will not be overwritten.",defVal:"null"},findMode:{docu:"Defines how find happens.",defval:"circle"},drawHover:{docu:"Function to draw overlay in case of hover a item. Is overwritten during processRawData hook. This would be the place to add your own hover drawing function.",
defVal:"null"}}},grid:{docu:"Grid specific data, which is supported in bandwidth plugin.",defVal:"none",clickable:{docu:"switch support for click event on or off",defVal:"none"},hoverable:{docu:"switch support for hover event on or off",defVal:"none"},editable:{docu:"switch editing of bandwith data on or off",defVal:"false"}}}}};$.plot.JUMExample.docu.bubbles={docu:"",bubbles:{docu:"<strong>Plugin to create bubble charts</strong>",data:{docu:"Data Array specific for Bubbles chart","0":{docu:"first data entry","0":{docu:"Y-value, location of bubble"},1:{docu:"X-value, location of value"},2:{docu:"Size of bubble"}}},options:{docu:"options for bubbles",series:{docu:"series options for bubbles",bubbles:{docu:"bubbles only options",active:{docu:"activate the plugin",defVal:"false"},show:{docu:"show specific serie. this needs to be overwritten in data",
defVal:"false"},fill:{docu:"Fill bubbles",defVal:"true"},lineWidth:{docu:"Line width of circle if fill is false",defVal:"2"},highlight:{docu:"Used to highlight in case of HOVER",opacity:{docu:"only Opacity is supported for Highlighting (yet)",defVal:"0.5"}},drawbubble:{docu:"Function call which is used for drawing of one bar for Bubble. This can be replaced by user defined function. Take a closer look to source of examples to see more.",defVal:" drawbubbleDefault(ctx,serie,x,y,v,r,c,overlay)"},bubblelabel:{docu:"Specific options how to show label in bubbles",
show:{docu:"Switches labels on (or off)",defVal:"false"},fillStyle:{docu:"Color of text",defVal:"black"}},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",active:{docu:"Activate the button for creating a template",defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",
defVal:" createDocuTemplate()"}}},editMode:{docu:"Default Editmode for bandwidth. See mouse plugin for more information."},nearBy:{docu:"data used to support findItem for hover, click etc.",distance:{docu:"distance in pixel to find nearest bubble",defVal:"6"},findMode:{docu:"Defines how find happens.",defVal:"circle"},findItem:{docu:"Function call to find item under Cursor. Is overwritten during processRawData hook. This would be the place to add your own find function, which will not be overwritten.",
defVal:" findNearbyItemDefault(mouseX,mouseY,i,serie)"},drawEdit:{docu:"function to draw edit marker. It is defined in jquery.flot.mouse plugin, and is overwritten in plugin to support specific editmarkers",defVal:" drawEditDefault(octx,x,y,serie)"},drawHover:{docu:"Function to draw overlay in case of hover a item. Is overwritten during processRawData hook. This would be the place to add your own hover drawing function.",defVal:" drawHoverDefault(octx,serie,dataIndex)"}}}},defVal:"none"},defVal:""};$.plot.JUMExample.docu.candlestick={docu:"Documentation",candlestick:{docu:"Plugin to show a candlestick chart",data:{docu:"Data Array specific for Bandwidth chart","0":{docu:"1st entry in data","0":{docu:"x-Position, usually a date"},1:{docu:"Start-value, used for the body"},2:{docu:"End-value, used for the body"},3:{docu:"minimum value, used for the line"},4:{docu:"maximum value, used for the line part"}}},options:{docu:"options (general object from FLOT)",series:{docu:"series (general object from FLOT)",
candlestick:{docu:"specific options for candlestick plugin",active:{docu:"switches binding of plugin into hooks",defVal:"false"},show:{docu:"switches show of candlestick on for actual series",defVal:"false"},rangeWidth:{docu:"range is displayed as line, this value is the width of this line",defVal:"4"},rangeColor:{docu:"Color of line from min to max",defVal:"rgb(0,128,128)"},upColor:{docu:"color of body from startvalue to endvalue if endvalue is greater than startvalue",defVal:"rgb(255,0,0)"},downColor:{docu:"color of body from startvalue to endvalue if endvalue is less than startvalue",
defVal:"rgb(0,255,0)"},neutralColor:{docu:"color of body if startvalue is equal to endvalue",defVal:"rgb(0,0,0)"},lineWidth:{docu:"Body is shown as a line, this is the size of the line",defVal:"8px"},highlight:{docu:"Describes how highlighting (in case of HOVER) is displayed",opacity:{docu:"Default for highlighting is to change opacity only",defVal:"0.5"}},drawCandlestick:{docu:"Default function to display each candlestick. This can be overwritten. Please see function mydraw in source of examples page",
defVal:" drawCandlestickDefault(ctx,serie,data,hover)"},debug:{docu:"Open functions for debugging/administration of plugin. Right now this is used to create a formular to support editing of documentation",active:{docu:"set a function to create the formular",defVal:"false"},createDocuTemplate:{docu:"if debug is true, the function is accessible",defVal:" createDocuTemplate()"}}},editMode:{docu:"defines in which direction editing could happen. optional values are: x,y,xy,v"},nearBy:{docu:"data used to support findItem for hover, click etc.",
distance:{docu:"maximum distance from data point to recognize a hit "},findItem:{docu:"function to find nearby item. It is defined in jquery.flot.mouse plugin, and is overwritten in plugin to support specific find functions.",defVal:" findNearbyItemDefault(mouseX,mouseY,i,serie)"},findMode:{docu:"mode to find nearby item. Values are circle, vertical and horizontal"},drawEdit:{docu:"function to draw edit marker. It is defined in jquery.flot.mouse plugin, and is overwritten in plugin to support specific editmarkers",
defVal:" drawEditDefault(octx,x,y,serie)"},drawHover:{docu:"function to draw hover shadow. It is defined in jquery.flot.mouse plugin.",defVal:" drawHoverDefault(octx,serie,dataIndex)"}}}}}};$.plot.JUMExample.docu.gantt={docu:"Documentation",gantt:{docu:"<strong>Plugin to create gantt charts</strong>",data:{docu:"Data Array specific for gantt chart","0":{docu:"first dataset for chart","0":{docu:"Start of Step"},1:{docu:"number of resource"},2:{docu:"End of step"},3:{docu:"Name for step (used for tooltip)"}}},options:{docu:"options (general object from FLOT)",series:{docu:"options.series (general object from FLOT)",gantt:{docu:"specific options for gantt plugin",active:{docu:"Activates the gantt Plugin",
defVal:"false"},show:{docu:"Switches on/off the gantt for actual serie of data. Works only, if plugin is activated.",defVal:"false"},connectSteps:{docu:"Describes connection lines from steps in one resource to a step in another.Its done by searching for steps in same serie which start at the same time another step ends.",show:{docu:"switches connection lines on",defVal:"false"},lineWidth:{docu:"describes the width of connection line",defVal:"2"},color:{docu:"color of connection line",defVal:"rgb(0,0,0)"}},
barHeight:{docu:"Height of the bar compared to available space (1.0 would be full size)",defVal:"0.6"},highlight:{docu:"Describes how highlighting (in case of HOVER) is displayed",opacity:{docu:"Default for highlighting is to change opacity only",defVal:"0.5"}},drawstep:{docu:"",defVal:" drawStepDefault(ctx,series,data,x,y,x2,color, isHighlight)"},debug:{docu:"Open functions for debugging/administration of plugin. Right now this is used to create a formular to support editing of documentation",active:{docu:"set a function to create the formular",
defVal:"false"},createDocuTemplate:{docu:"if debug is true, the function is accessible",defVal:" createDocuTemplate()"}}},editMode:{docu:"defines in which direction editing could happen. optional values are: x,y,xy,v. This value is changed by the plugin, depending on the way you select a timebar (left, right or body)"},nearBy:{docu:"ata used to support findItem for hover, click etc.",distance:{docu:"maximum distance from data point to recognize a hit "},findItem:{docu:"function to find nearby item. It is defined in jquery.flot.mouse plugin, and is overwritten in plugin to support specific find functions.",
defVal:" findNearbyItemDefault(mouseX,mouseY,i,serie)"},findMode:{docu:"mode to find nearby item. Values are circle, vertical and horizontal"},drawEdit:{docu:"function to draw edit marker. It is defined in jquery.flot.mouse plugin, and is overwritten in plugin to support specific editmarkers",defVal:" drawEditDefault(octx,x,y,serie)"},drawHover:{docu:"function to draw hover shadow. It is defined in jquery.flot.mouse plugin.",defVal:" drawHoverDefault(octx,serie,dataIndex)"}}}}}};$.plot.JUMExample.docu.pyramid={docu:"Documentation",pyramid:{docu:"Plugin to create pyramid charts",data:{docu:"Data Array specific for pyramid chart","0":{docu:"first data entry",value:{docu:"Value(size) for data slice"},label:{docu:"Label of the data clice"}}},options:{docu:"options for pyramid",series:{docu:"series options for pyramid",pyramid:{docu:"pyramid only options",active:{docu:"activate the plugin",defVal:"false"},show:{docu:"how specific serie. this needs to be overwritten in data",defVal:"false"},
mode:{docu:"Decribes how a slice is shown. Actually pyramid and slice are supported",defVal:"pyramid"},fill:{docu:"Switches Fillmode for drawing of a slice",defVal:"true"},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",active:{docu:"Activate the button for creating a template",defVal:"false"},
createDocuTemplate:{docu:" If debug.active is true, this holds the function which is used to create the template for documentation",defVal:" createDocuTemplate()"}},highlight:{docu:"Used to highlight in case of HOVER",opacity:{docu:"only Opacity is supported for Highlighting (yet)",defVal:"0.5"}},label:{docu:"description whether and how a label should be drawn",show:{docu:"Swichtes label drawing on or off",defVal:"false"},align:{docu:"Position of label",defVal:"center"},font:{docu:"Used font for Label",
defVal:"20px Times New Roman"},fillStyle:{docu:"Default color for label",defVal:"Black"}}},editMode:{docu:"comin form mouse plugin, is nonsense for this plugin, since edit is not supported"},nearBy:{docu:"Defines how nearby is used to find item under mouse",distance:{docu:"distance in pixel to find nearest slyce",defVal:"6"},findItem:{docu:"Function call to find item under Cursor. Is overwritten during processRawData hook. This would be the place to add your own find function, which will not be overwritten."},
findMode:{docu:"Defines how find happens.",defVal:"circle"},drawHover:{docu:"Function to draw overlay in case of hover a item. Is overwritten during processRawData hook. This would be the place to add your own hover drawing function."},drawEdit:{docu:"not used",defVal:" drawEditDefault(octx,x,y,serie)"}}}}}};$.plot.JUMExample.docu.radar={docu:"Documentation",radar:{docu:"<strong>Plugin to create spider chart</strong>",data:{docu:"Data Array specific for Spider chart","0":{docu:"first data entry","0":{docu:"Angle of datapoint in degrees(1-360)"},1:{docu:"Size of datapoint"}}},options:{docu:"options for Radar",series:{docu:"series options for Radar",radar:{docu:"Radar only options",active:{docu:"activate the plugin",defVal:"false"},show:{docu:"show specific serie. this needs to be overwritten in data",
defVal:"false"},radarSize:{docu:"size of radar screen relative to size of placeholder",defVal:"0.8"},delay:{docu:"Delay in ms between redrawing on next position",defVal:"10"},angleStep:{docu:"stepsize to next position in degrees(0-360). Do not use big numbers here, for testing start below 100",defVal:"1"},angleSize:{docu:"Size of each sub radar beam. Use userdefined screen for testing.",defVal:"10"},angleSteps:{docu:"Number of sub radar beams. Values up to 9 are useful.",defVal:"6"},color:{docu:"Beam Color",
defVal:"darkgreen"},backColor:{docu:"Color of background",defVal:"darkgreen"},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",active:{docu:"Activate the button for creating a template",defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",
defVal:" createDocuTemplate()"}}}}}}};$.plot.JUMExample.docu.rose={docu:"Documentation",rose:{docu:"Plugin to show a rose chart",data:{docu:"Data Array specific for Rose chart","0":{docu:"Values are only the size of the rose"}},options:{docu:" options (general object from FLOT)",series:{docu:"series (general object from FLOT)",rose:{docu:"specific options for rose plugin",active:{docu:"switches binding of plugin into hooks",defVal:"false"},show:{docu:"switches show of candlestick on for actual series",defVal:"false"},roseSize:{docu:"Size of the rose-circle, maximumsize is 1.0, take care to have some space for lables.",
defVal:"0.7"},leafSize:{docu:"Value from 0 to 1 giving the space of the pie to be used for the rose",defVal:"0.7"},dataMin:{docu:"Minimum value for the rose. This is not calculated form data (yet), so you have to give data.",defVal:"0"},dataMax:{docu:"Maximum value for the rose. This is not calculated form data (yet), so you have to give data.",defVal:"100"},drawGrid:{docu:"",drawValue:{docu:"",defVal:"true"},drawLabel:{docu:"",defVal:"true"},labelPos:{docu:"",defVal:"0.5"},gridMode:{docu:"",defVal:"data"}},
highlight:{docu:"Describes how highlighting (in case of HOVER) is displayed",opacity:{docu:"Default for highlighting is to change opacity only",defVal:"0.5"}},debug:{docu:"Open functions for debugging/administration of plugin. Right now this is used to create a formular to support editing of documentation",active:{docu:"set a function to create the formular",defVal:"false"},createDocuTemplate:{docu:"if debug is true, the function is accessible",defVal:" createDocuTemplate()"}}}}}}};$.plot.JUMExample.docu.rectangle={docu:"Documentation",rectangle:{docu:"Plugin to create rectangle charts",data:{docu:"Data Array specific for rectangle chart","0":{docu:"first data entry",label:{docu:"standard label"},data:{docu:"standard in flot"},pos:{docu:"plugin internal cache for later support of hover etc",x:{docu:"x-position"},y:{docu:"y-position"},w:{docu:"width"},h:{docu:"height"},color:{docu:"guess yourself, what this could be :-)"}}}},options:{docu:"options for rectangle",series:{docu:"series options for rectangle",
rectangle:{docu:"rectanle only options",active:{docu:"activate the plugin",defVal:"false"},show:{docu:"show specific serie. this needs to be overwritten in data",defVal:"false"},fill:{docu:"rectangle to be filled (or not)",defVal:"true"},lineWidth:{docu:"linewidth for border of rectangle",defVal:"2"},directions:{docu:"array of direction how the rectangles should be drawn on screen. Should not be empty. Optional values are:<br>t for top, l for left, b for bottom and r for right.<br>For example taking tl would draw first rectangle from top of empty drawing are down to bottom, next would start on left of empty area and going to the right.",
defVal:"tlbr"},highlight:{docu:"Used to highlight in case of HOVER",opacity:{docu:"only Opacity is supported for Highlighting (yet)",defVal:"0.5"}},drawRectangle:{docu:"default drawing callback for each rectangle. Can be overwritten by userdefined function",defVal:" drawRectangleDefault(ctx,serie,dataIndex)"},label:{docu:"defines whether / how labels are shown",show:{docu:"show labels or not",defVal:"false"},fillStyle:{docu:"color of labeltext",defVal:"black"}},debug:{docu:" for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",
active:{docu:"Activate the button for creating a template",defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",defVal:" createDocuTemplate()"}}},editMode:{docu:"Default Editmode for Rectangle. See mouse plugin for more information."},nearBy:{docu:" data used to support findItem for hover, click etc.",distance:{docu:"distance in pixel to find nearest rectangle",defVal:"6"},findMode:{docu:"Defines how find happens.",
defVal:"circle"},findItem:{docu:" Function call to find item under Cursor. Is overwritten during processRawData hook. This would be the place to add your own find function, which will not be overwritten.",defVal:" findNearbyItemDefault(mouseX,mouseY,i,serie)"},drawEdit:{docu:"Not supported for rectangle",defVal:" drawEditDefault(octx,x,y,serie)"},drawHover:{docu:"Function to draw overlay in case of hover a item. Is overwritten during processRawData hook. This would be the place to add your own hover drawing function.",
defVal:" drawHoverDefault(octx,serie,dataIndex)"}}}}}};$.plot.JUMExample.docu.spider={docu:"",spider:{docu:"<strong>Plugin to create spider chart</strong>",data:{docu:"Data Array specific for Spider chart","0":{docu:"first data entry","0":{docu:"number of spider leg, see options.spider.legs for some more info"},1:{docu:"Value in spider leg"}}},options:{docu:"options for Spider",series:{docu:"series options for Spider",spider:{docu:"Spider only options",active:{docu:"activate the plugin",defVal:"false"},show:{docu:"show specific serie. this needs to be overwritten in data",
defVal:"false"},spiderSize:{docu:"Size of the full spider based on size of placeholder",defVal:"0.8"},lineWidth:{docu:"Linewidth for grid lines",defVal:"3"},lineStyle:{docu:"Drawing style for the Gridlines",defVal:"rgba(0,0,0,0.5)"},pointSize:{docu:"Size of the marker on spiderleg. Its later used for highlighting a set of data",defVal:"6"},scaleMode:{docu:"describes how min and max should be calculated. Options are leg to calculate each leg seperately or others to calculate one general value for all legs",
defVal:"leg"},legMin:{docu:"Overwrites calculated min scale for all legs. Smaller datapoints will be set to this value in display."},legMax:{docu:"Overwrites calculated max scale for all legs. Greater datapoints will be set to this value in display"},connection:{docu:"Option to describe the way to show connections between legs",width:{docu:"Linewidth to connect markers of a dataserie (BTW, can be 0 please test to see what happens)",defVal:"4"}},highlight:{docu:"Used for highlighting a serie",opacity:{docu:"Opacity (what else)",
defVal:"0.5"},mode:{docu:"Options are point (highlights markers on spider legs only, line (highlights lines from marker to marker, area (highlights the serie as a polygon, I love this one)",defVal:"point"}},legs:{docu:"Describes how the name for each leg is drawn",font:{docu:"",defVal:"20px Times New Roman"},fillStyle:{docu:"",defVal:"Black"},legScaleMin:{docu:"",defVal:"0.95"},legScaleMax:{docu:"",defVal:"1.05"},legStartAngle:{docu:"",defVal:"0"},data:{docu:"","0":{docu:"",label:{docu:""}},1:{docu:"",
label:{docu:""}},2:{docu:"",label:{docu:""}},3:{docu:"",label:{docu:""}},4:{docu:"",label:{docu:""}}}},debug:{docu:"",active:{docu:"",defVal:"false"},createDocuTemplate:{docu:"",defVal:" createDocuTemplate()"}}},editMode:{docu:""},nearBy:{docu:"",distance:{docu:"",defVal:"6"},findItem:{docu:""},findMode:{docu:"",defVal:"circle"},drawEdit:{docu:""},drawHover:{docu:""}}}},defVal:"none"},defVal:""};$.plot.JUMExample.docu.heatmap={docu:"Documentation",heatmap:{}};$.plot.JUMExample.docu.grow={docu:"Documentation",grow:{docu:"Plugin to support animation of charts",data:{docu:"Data Array specific for Bandwidth chart","0":{docu:"first data entry","0":{docu:"Y-value"},1:{docu:"X-value"}}},options:{docu:" options for grow",series:{docu:"series options for grow",grow:{docu:"grow only options",active:{docu:"activate the plugin",defVal:"true"},valueIndex:{docu:"which part of data should be used for growing. Usually it is the X-Value which has index and therefor is 2nd value ",
defVal:"1"},stepDelay:{docu:"delay between 2 steps in millisecs. Depending on the power of your brower/computer the time to draw a chart has to be added.",defVal:"20"},steps:{docu:"Defines how many seperate steps will be shown from beginning to end",defVal:"100"},stepMode:{docu:"defines how each step is performed. Options are linear (step by step, everything is growing to the end), maximum (grow until value is reached, growing stops earlier for smaller values) and delayed (nothing and start later)",
defVal:"linear"},stepDirection:{docu:"direction of steps up(from 0 to value) or down(from axis.max to value)",defVal:"up"},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",active:{docu:"Activate the button for creating a template",defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",
defVal:" createDocuTemplate()"}}},editMode:{docu:"not supported"},nearBy:{docu:"not supported"}}}}};$.plot.JUMExample.docu.spiral={docu:"Documentation",spiral:{docu:"Plugin to create rectangle charts",data:{docu:"Data Array specific for spiral chart","0":{docu:"first data entry",label:{docu:"standard label"},data:{docu:"standard in flot"},color:{docu:"color for pie, can be a simple color or a gradient",colors:{docu:"This array holds color data for gradients. supported are brightness, opacity and colors","0":{docu:"inner color"},1:{docu:"color(s) between, number is between 0 and ....."},2:{docu:"outer color"}}}}},
options:{docu:"options for spiral",series:{docu:"series options for spiral",spiral:{docu:"Specific options for spiral",active:{docu:"activate the plugin",defVal:"false"},show:{docu:"show specific serie. this needs to be overwritten in data",defVal:"false"},spiralSize:{docu:"size of spiral screen relative to size of placeholder",defVal:"0.8"},rotations:{docu:"number of rotations in animation",defVal:"3"},steps:{docu:"number of steps in each rotation",defVal:"36"},delay:{docu:"delay in ms between steps",
defVal:"50"},highlight:{docu:"Used to highlight in case of HOVER",opacity:{docu:" only Opacity is supported for Highlighting (yet)",defVal:"0.5"}},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",active:{docu:"Activate the button for creating a template",defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",
defVal:" createDocuTemplate()"}}}}}}};$.plot.JUMExample.docu.animate={docu:"Documentation",animate:{docu:"<strong>Plugin to handle simple animations charts</strong>",options:{docu:"Options object from Flot",animate:{docu:"Animate specific options",active:{docu:"activate the plugin",defVal:"false"},mode:{docu:"Mode of animation. Right now tile and pixastic are supported.<br><br>Tile splits the drawing in tiles and draws them based on tile options",defVal:"tile"},tile:{docu:"Tile specif options for animate",x:{docu:"Number of tiles in x direction",
defVal:"3"},y:{docu:"Number of tiles in y direction",defVal:"3"},mode:{docu:"Describes, how tiles are drawn<br><br>lt: starting on left, top, columns first, then rows<br><br>tl: starting on left, top, rows first then coumns<br><br>rb: starting bottom right, columns first then rows<br><br>br: starting bottom right, rows first then columns<br><br>random: draws tile by randomized function",defVal:"lt"}},pixastic:{docu:"Specific option for using pixastic library, see www.pixastic.com for more information about this library. Only a few options of this powerful library are taken for animate.",
maxValue:{docu:"Value between -1 and +1<br><br>defines how strong the deformation should start.",defVal:"1"},mode:{docu:"Name of pixastic functions:<br><br>blurfast<br><br>lighten<br><br>emboss<br><br>mosaic<br><br>noise",defVal:"blurfast"}},stepDelay:{docu:"Delay in mille secs between steps in pixastic or before drawing next tile",defVal:"500"},steps:{docu:"Number of steps, used for pixastic only",defVal:"20"},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",
active:{docu:"Activate the button for creating a template in examples",defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",defVal:" createDocuTemplate()"}}}}}};$.plot.JUMExample.docu.video={docu:"Documentation",video:{docu:"video plugin to create videos based on charts.<br>If you want to create your own video, take a closer look to deferred object in jQuery.",data:{docu:"There is no special data for videos by default. This depends on the type of video steps you would like to have.<br>Take a closer look to examples to see how to add special data to describe steps."},options:{docu:"options for video",series:{docu:"series options for videos",video:{docu:"video only options",
active:{docu:"activate the plugin",defVal:"false"},show:{docu:"take data from show specific serie for video, this needs to be overwritten in data ",defVal:"false"},stepAction:{docu:"describes how the step should be shown. Default stephandling can be selected out of stepCollection:<br>default: appends information from data to a div or if no div given opens an alertbox<br>youtube: if a youtube id is given, the video is shown<br>a function name: the given function is called by handing over actual stepdata and seriesdata",
defVal:"simple"},stepCollection:{docu:"collection of predefined videosteps",simple:{docu:"default step giving information in a very simple way, see first example.",runStep:{docu:"Adds stepData to a div defined in walkPad",defVal:" addStepData(stepData,actionData)"},walkPad:{docu:"target for addStepData",defVal:"#stepPad"},walkTime:{docu:"Time for each step before walking to the next one",defVal:"2000"}},youtube:{docu:"opens and starts a video from youtube.<br>For this action a jQuery plugin from http://www.pittss.lv/jquery/gomap/index.php is used.",
runStep:{docu:"shows a video in target defined in videoPad",defVal:" youtubeStep(stepData,actionData)"},videoPad:{docu:"target for runStep",defVal:"#videoPad"},width:{docu:"default width of video",defVal:"400"},height:{docu:"default height of video",defVal:"300"},maxDuration:{docu:"maximum duration of a video. Whatever happens first, end of video or end of maxDuration, stops actual step.",defVal:"20000"},noVideoDuration:{docu:"Duration of step if no video information is available",defVal:"2000"}}},
debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",active:{docu:"Activate the button for creating a template in my examples",defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",defVal:" createDocuTemplate()"}}}}}}};$.plot.JUMExample.docu.contour={docu:"Documentation",contour:{docu:"<strong>Plugin to create bandwidth charts</strong>",data:{docu:"Data Array specific for contour chart","0":{docu:"first data entry","0":{docu:"X-position"},1:{docu:"Y-position"},2:{docu:"Width of contour"},3:{docu:"height of contour"},4:{docu:"angle of whole contour"}}},options:{docu:"options for contour",series:{docu:"series options for contour",contour:{docu:"contour only options",active:{docu:"activate the plugin",defVal:"false"},
show:{docu:"show specific serie. this needs to be overwritten in data",defVal:"false"},ellipseStep:{docu:"drawing of contour ellipse is based on code found in the internet. There was no author, so if you are the one, please give me a hint.<br><br>ellipseStep is used to define how perfect the ellipse should be, take a higher value to see what this means",defVal:"0.1"},debug:{docu:"for debugging reasons. Right now, create a template for documentation is supported. This is filled by already existing docu, and converted to a formular to edit. After editing the edited data can be stringified to be copied to the docu-object.",
active:{docu:"Activate the button for creating a template in my examples",defVal:"false"},createDocuTemplate:{docu:"If debug.active is true, this holds the function which is used to create the template for documentation",defVal:" createDocuTemplate()"}}},nearBy:{docu:"data used to support findItem for hover, click etc.<br><br>this part is not tested very well yet and needs to be rebuilt",distance:{docu:"distance in pixel to find nearest contour"},findItem:{docu:"Function call to find item under Cursor. Is overwritten during processRawData hook. This would be the place to add your own find function, which will not be overwritten."},
findMode:{docu:"Defines how find happens."},drawHover:{docu:"Function to draw overlay in case of hover a item. Is overwritten during processRawData hook. This would be the place to add your own hover drawing function."}}}}}};